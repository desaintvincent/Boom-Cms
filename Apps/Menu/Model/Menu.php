<?php
namespace Apps\Menu\Model;

use Boom\Model\Model;

class Menu extends Model {
    public $prefix = 'menu_';

    function save($data = [], $table = null)
    {
        d($data);
        return parent::save($data, $table); // TODO: Change the autogenerated stub
    }

    function menu_items($id, $data, $parent = NULL) {
        $order = 0;
        foreach ($data as $item) {

            d($item['name']);
            if ($item['deleted'] == 1) {
                //on delete l'item
            } else if ($item['new'] == 1) {
                //nouveau item
                /*if (empty($parent)) {
                    $parent = NULL;
                }*/
                $query = "INSERT INTO `menu_items` (`id`, `mitem_parent_id`, `mitem_display_order`, `mitem_menu_id`, `mitem_title`, `mitem_arg`, `mitem_type`) VALUES (NULL, :mitem_parent, :mitem_order, :mitem_parent_id, :mitem_name, NULL, 1);";

                $stmt = $this->db->prepare($query);

                $stmt->bindParam(':mitem_parent', $parent);
                $stmt->bindParam(':mitem_order', $order);
                $stmt->bindParam(':mitem_parent_id', $id);
                $stmt->bindParam(':mitem_name', $item['name']);
                $stmt->execute();


/*
                $foo = $this::getInstance();
                $stmt = $foo->prepare("CALL delete(?)");
                $stmt->bindParam(2122, $return_value, PDO::PARAM_STR, 4000);
                $stmt->execute();*/

            } else {
                //update item
            }
            //on est un gosse
            if (!empty($parent)) {

            }

            //récursive
            if (isset($item['children'])) {
                $this->menu_items($id, $item['children'], $item['id']);
            }
            //on incrémente l'order
            $order++;
        }
    }

    function update($id, $data = null, $table = null)
    {

        $array = json_decode($data['output_items'],true);
        if (!empty($array)) {
            d($array);
            $this->menu_items($id, $array);
        }

        /*//$post_db = run_array_parent($array,'0');
        //d($array);
        $to_db =array();

        //comparaison de ouf pour savoir si on crée ou supprime
        foreach($post_db as $key => $value){
            //if( !array_key_exists($key,$from_db) || ($from_db[$key]['parent'] != $value['parent']) || ($from_db[$key]['order'] != $value['order'])){
            //    $to_db[$key] = $value;
            //}
        }*/

        unset($data['output_items']);
        return parent::update($id, $data, $table); // TODO: Change the autogenerated stub
    }
}